[tox]
envlist = {py35,py36}-{mysql,postgres,sqlite, integration}, mysql, sqlite, postgres, flake8
skipsdist = True

[base]
passenv =
    PYTHONPATH
    TEST_DB_USER
    TEST_DB_PASSWORD
    TEST_DB_HOST
    TEST_DB_PORT
    TEST_DB_NAME
setenv =
    PIPENV_IGNORE_VIRTUALENVS=1
    PYTHONPATH = {toxinidir}:{toxinidir}/cenotes
    TEST_DB_AGNOSTIC = {env:TEST_DB_USER:root}:{env:TEST_DB_PASSWORD:}@{env:TEST_DB_HOST:127.0.0.1}:{env:TEST_DB_PORT:3306}/{env:TEST_DB_NAME:test_tox_db}
commands =
            pip install -r requirements.txt
            pip install -r requirements-dev.txt
            python manage.py -c config_backend.Testing db upgrade
            py.test

[sqlite]
commands =
            {[base]commands}

[mysql]
commands =
            {[base]commands}

[postgres]
commands =
            {[base]commands}

[integration]
commands =
            pip install pipenv==11.10.0
            pipenv install --dev
            pipenv run python manage.py -c config_backend.Testing db upgrade
            pipenv run py.test

[flake8]
basepython=python
commands =
            pip install flake8
            flake8 cenotes
max-complexity = 8

[testenv]
passenv = {[base]passenv}
setenv =
            {[base]setenv}
            py{35,36,}-sqlite: DB_URI = sqlite:///{toxinidir}/db_tox_test.sqlite3
            py{35,36,}-mysql: DB_URI = mysql://{env:TEST_DB_AGNOSTIC}
            py{35,36,}-postgres: DB_URI = postgresql://{env:TEST_DB_AGNOSTIC}
            py{35,36,}-integraton: {[sqlite]setenv}
deps =
            py{35,36,}-mysql: mysqlclient
            py{35,36,}-postgres: psycopg2
commands =
            py{35,36,}-sqlite: {[sqlite]commands}
            py{35,36,}-mysql: {[mysql]commands}
            py{35,36,}-postgres: {[postgres]commands}
            flake8: {[flake8]commands}
            py{34,35,36,}-integration: {[integration]commands}
